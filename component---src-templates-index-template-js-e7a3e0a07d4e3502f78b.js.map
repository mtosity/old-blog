{"version":3,"sources":["webpack:///./src/templates/index-template.js"],"names":["query","IndexTemplate","data","pageContext","useSiteMetadata","siteTitle","title","siteSubtitle","subtitle","currentPage","pageTitle","hasNextPage","hasPrevPage","prevPagePath","nextPagePath","allMarkdownRemark","edges","description","isIndex"],"mappings":"8FACA,wJAgDaA,EAAK,aA0BHC,UA1DO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAyB,EACDC,cAAtCC,EADuC,EAC9CC,MAA4BC,EADkB,EAC5BC,SAGxBC,EAKEN,EALFM,YAQIC,GAHFP,EAJFQ,YAIER,EAHFS,YAGET,EAFFU,aAEEV,EADFW,aAGgBZ,EAAKa,kBAAfC,MAENP,EAAc,EAAd,gBAAkCA,EAAlC,MAAmDJ,EAAcA,GAEnE,OACE,kBAAC,IAAD,CAAQC,MAAOI,EAAWO,YAAaV,GACrC,kBAAC,IAAD,CAASW,SAAO,IAChB,kBAAC,IAAD,KACE,kBAAC,IAAD","file":"component---src-templates-index-template-js-e7a3e0a07d4e3502f78b.js","sourcesContent":["// @flow strict\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Sidebar from \"../components/Sidebar\";\nimport Feed from \"../components/Feed\";\nimport Page from \"../components/Page\";\nimport Pagination from \"../components/Pagination\";\nimport Search from \"../components/Search\";\nimport { useSiteMetadata } from \"../hooks\";\nimport type { PageContext, AllMarkdownRemark } from \"../types\";\n\ntype Props = {\n  data: AllMarkdownRemark,\n  pageContext: PageContext,\n};\n\nconst IndexTemplate = ({ data, pageContext }: Props) => {\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\n\n  const {\n    currentPage,\n    hasNextPage,\n    hasPrevPage,\n    prevPagePath,\n    nextPagePath,\n  } = pageContext;\n\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle =\n    currentPage > 0 ? `Posts - Page ${currentPage} - ${siteTitle}` : siteTitle;\n\n  return (\n    <Layout title={pageTitle} description={siteSubtitle}>\n      <Sidebar isIndex />\n      <Page>\n        <Search />\n        {/* <Feed edges={edges} />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        /> */}\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query IndexTemplate($postsLimit: Int!, $postsOffset: Int!) {\n    allMarkdownRemark(\n      limit: $postsLimit\n      skip: $postsOffset\n      filter: { frontmatter: { template: { eq: \"post\" }, draft: { ne: true } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexTemplate;\n"],"sourceRoot":""}